# .github/workflows/build-vulkan.yml
name: Build Whisper Vulkan (Windows\Choco)

on:
  workflow_dispatch:

jobs:
  build:
    # Run on multiple Windows host labels so you detect runner-image differences early
    strategy:
      matrix:
        os: [windows-latest, windows-2022]

    runs-on: ${{ matrix.os }}
    env:
      CMAKE_GENERATOR: "Visual Studio 17 2022"
      CMAKE_GENERATOR_PLATFORM: "x64"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Chocolatey (if missing)
        shell: powershell
        run: |
          if (-not (Get-Command choco -ErrorAction SilentlyContinue)) {
            Set-ExecutionPolicy Bypass -Scope Process -Force
            iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
          }

      - name: Install Vulkan SDK (choco) with retry
        shell: powershell
        run: |
          $tries = 0
          $max = 3
          while ($tries -lt $max) {
            $tries++
            try {
              choco install -y vulkan-sdk --no-progress
              break
            } catch {
              Write-Host "choco install failed (attempt $tries/$max): $_"
              if ($tries -ge $max) { throw "choco install failed after $max attempts" }
              Start-Sleep -Seconds (10 * $tries)
            }
          }
          # export the installed SDK path for later steps
          $vpath = Get-ChildItem 'C:\VulkanSDK' | Sort-Object LastWriteTime -Descending | Select-Object -First 1
          if (-not $vpath) { Write-Host "No VulkanSDK folder found"; exit 1 }
          echo "VULKAN_SDK=${vpath.FullName}" >> $env:GITHUB_ENV
          echo "PATH=${vpath.FullName}\Bin;${env:PATH}" >> $env:GITHUB_ENV

      - name: Install CMake (stable)
        uses: lukka/get-cmake@v2

      - name: Show environment & toolchain (debug)
        shell: powershell
        run: |
          echo "=== Environment ==="
          echo "RU
